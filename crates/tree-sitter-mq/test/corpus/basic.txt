==================
Simple let statement
==================

let x = 1

---

(source_file
  (let_statement
    name: (identifier)
    value: (number)))

==================
Function definition
==================

def greet(name):
  let message = "Hello"
  | message
end

---

(source_file
  (def_statement
    name: (identifier)
    parameters: (parameter_list (identifier))
    (let_statement
      name: (identifier)
      value: (pipe_expression
        (string)
        (identifier)))))

==================
Function call
==================

add(1, 2)

---

(source_file
  (call_expression
    function: (identifier)
    arguments: (argument_list
      (number)
      (number))))

==================
Foreach loop
==================

foreach (x, array(1, 2, 3)):
  add(x, 1);

---

(source_file
  (foreach_statement
    variable: (identifier)
    iterable: (call_expression
      function: (identifier)
      arguments: (argument_list
        (number)
        (number)
        (number)))
    (call_expression
      function: (identifier)
      arguments: (argument_list
        (identifier)
        (number)))))

==================
If statement
==================

if (x > 0):
  x
end

---

(source_file
  (if_statement
    condition: (group_expression
      (binary_expression
        (identifier)
        (number)))
    (identifier)))

==================
Binary expressions
==================

1 + 2 * 3

---

(source_file
  (binary_expression
    (number)
    (binary_expression
      (number)
      (number))))

==================
Pipe expression
==================

x | add(1)

---

(source_file
  (pipe_expression
    (identifier)
    (call_expression
      function: (identifier)
      arguments: (argument_list (number)))))

==================
Array literal
==================

[1, 2, 3]

---

(source_file
  (array
    (number)
    (number)
    (number)))

==================
Dict literal
==================

{name: "test", value: 42}

---

(source_file
  (dict
    (dict_entry
      key: (identifier)
      value: (string))
    (dict_entry
      key: (identifier)
      value: (number))))

==================
Comment
==================

# This is a comment
let x = 1

---

(source_file
  (comment)
  (let_statement
    name: (identifier)
    value: (number)))