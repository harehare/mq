include "csv"
| include "test"

| let input = "a,b,c\n\"1,2\",\"2,3\",\"3,4\"\n4,5,6\n\"multi\nline\",7,8\n9,10,\"quoted,comma\"\n\"\",11,12\n13,14,15\n"
| def test_csv_parse_for_dict():
    let result = csv_parse(input, true)
    | assert_eq(len(result), 6)
  end

| def test_csv_to_json_for_dict():
    let result = csv_to_json(csv_parse(input, true))
    | assert_eq(result, "[{\"a\":\"1,2\",\"b\":\"2,3\",\"c\":\"3,4\"},{\"a\":\"4\",\"b\":\"5\",\"c\":\"6\"},{\"a\":\"multi\\nline\",\"b\":\"7\",\"c\":\"8\"},{\"a\":\"9\",\"b\":\"10\",\"c\":\"quoted,comma\"},{\"a\":\"\",\"b\":\"11\",\"c\":\"12\"},{\"a\":\"13\",\"b\":\"14\",\"c\":\"15\"}]")
  end

| def test_csv_parse_for_array():
    let result = csv_parse(input, false)
    | assert_eq(len(result), 7)
  end

| def test_csv_to_json_for_array():
    let result = csv_to_json(csv_parse(input, false))
    | assert_eq(result, "[[\"a\",\"b\",\"c\"],[\"1,2\",\"2,3\",\"3,4\"],[\"4\",\"5\",\"6\"],[\"multi\\nline\",\"7\",\"8\"],[\"9\",\"10\",\"quoted,comma\"],[\"\",\"11\",\"12\"],[\"13\",\"14\",\"15\"]]")
  end

|

run_tests([
  test_case("CSV Parse for Dict", test_csv_parse_for_dict),
  test_case("CSV to JSON for Dict", test_csv_to_json_for_dict),
  test_case("CSV Parse for Array", test_csv_parse_for_array),
  test_case("CSV to JSON for Array", test_csv_to_json_for_array)
])
