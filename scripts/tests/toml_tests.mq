include "toml"
| include "test"

| let input = "[package]\nauthors = [\"Test Author <test@example.com>\"]\ndescription = \"A test TOML configuration file\"\nedition = \"2021\"\nlicense = \"MIT\"\nname = \"test-package\"\nversion = \"1.0.0\"\n\n[dependencies]\nclap = \"4.0\"\nserde = \"1.0\"\ntokio = {version = \"1.0\", features = [\"full\"]}\n\n[dev-dependencies]\nassert_cmd = \"2.0\"\npredicates = \"3.0\"\n\n[features]\ndefault = [\"json\"]\njson = [\"serde_json\"]\nyaml = [\"serde_yaml\"]\n\n[[bin]]\nname = \"test-cli\"\npath = \"src/main.rs\"\n\n[build-dependencies]\ncc = \"1.0\"\n\n[profile.release]\ncodegen-units = 1\nlto = true\nopt-level = 3\n\n[workspace]\nmembers = [\n  \"crate1\",\n  \"crate2\",\n  \"subdir/crate3\",\n]\n\n[metadata.docs.rs]\nall-features = true\nrustdoc-args = [\"--cfg\", \"docsrs\"]\n\n# Configuration section\n[config]\ndebug = true\nmax_connections = 100\ntimeout = 30\n\n[config.database]\nhost = \"localhost\"\nname = \"testdb\"\npassword = \"secret\"\nport = 5432\nuser = \"admin\"\n\n[config.server]\nhost = \"0.0.0.0\"\nport = 8080\nworkers = 4\n\n# Array of tables\n[[servers]]\nip = \"10.0.0.1\"\nname = \"alpha\"\nrole = \"frontend\"\n\n[[servers]]\nip = \"10.0.0.2\"\nname = \"beta\"\nrole = \"backend\"\n\n# Nested configuration\n[logging]\nformat = \"json\"\nlevel = \"info\"\n\n[logging.file]\nmax_size = \"10MB\"\npath = \"/var/log/app.log\"\nrotate = true\n\n[logging.console]\ncolors = true\nenabled = true\n\n# Test data arrays\ntest_booleans = [true, false, true]\ntest_floats = [3.14, 2.71, 1.41]\ntest_numbers = [1, 2, 3, 42]\ntest_strings = [\"hello\", \"world\", \"test\"]\n\n# Mixed data types\n[mixed_data]\narray_value = [1, 2, 3]\nboolean_value = true\ndate_value = 2024-01-01T00:00:00Z\nfloat_value = 3.14159\ninteger_value = 42\nstring_value = \"test string\"\n\n[mixed_data.nested]\nkey1 = \"value1\"\nkey2 = \"value2\"\n\n# Different number formats\nbin_number = 0b11010110\nfloat_with_exponent = 5e+22\nfloat_with_underscore = 224_617.445_991_228\nhex_number = 0xDEADBEEF\nint_with_underscore = 1_000_000\noct_number = 0o755\n\n# Date and time formats\nlocal_date = 1979-05-27\nlocal_datetime = 1979-05-27T07:32:00\nlocal_time = 07:32:00\noffset_datetime = 1979-05-27T07:32:00-08:00\n\n# Arrays with different types\nheterogeneous_array = [[1, 2], [\"a\", \"b\", \"c\"]]\nnested_array = [[\"gamma\", \"delta\"], [1, 2]]\n\n# Inline tables\ninline_table = {x = 1, y = 2}\nnested_inline = {person = {name = \"John\", age = 30}}\n\n# Special values\ninfinity = inf\nnegative_infinity = -inf\nnot_a_number = nan\n\n# Empty values\nempty_array = []\nempty_string = \"\"\n\n# Comments with Unicode\n# これは日本語のコメントです\nrussian_comment = \"Привет мир\" # This is a Russian greeting\n\n# Complex nested structure\n[[products]]\nname = \"Hammer\"\nsku = 738594937\n\n[[products]]\ncolor = \"gray\"\nname = \"Nail\"\nsku = 284758393\n\n[tool]\nname = \"cargo\"\nversion = \"1.70.0\"\n\n[tool.settings]\ncompression = true\nformat = \"json\"\n\n[tool.features]\ndefault = [\"std\"]\nno-std = [\"core\"]\nstd = []\n\n# More array of tables examples\n[[database.connection]]\nconnection_max = 5000\nenabled = true\nports = [8001, 8001, 8002]\nserver = \"192.168.1.1\"\n\n[[database.connection]]\nconnection_max = 300\nenabled = false\nports = [8001]\nserver = \"192.168.1.2\"\n\n# Key patterns\n\"127.0.0.1\" = \"localhost\"\nbarke_key = \"value\"\n\"character encoding\" = \"UTF-8\"\nquoted_key = \"value\"\n\"ʎǝʞ\" = \"upside down key\"\n"

| def test_toml_parse():
    let result = toml_parse(input)
    | assert_eq(len(result), 21)
  end

| def test_toml_to_json():
    let result = toml_to_json(toml_parse(input))
    | assert_eq(result, "{\"127.0.0.1\":\"localhost\",\"barke_key\":\"value\",\"bin\":[{\"name\":\"test-cli\",\"path\":\"src/main.rs\"}],\"build-dependencies\":{\"cc\":\"1.0\"},\"character encoding\":\"UTF-8\",\"config\":{\"database\":{\"host\":\"localhost\",\"name\":\"testdb\",\"password\":\"secret\",\"port\":5432,\"user\":\"admin\"},\"debug\":true,\"max_connections\":100,\"server\":{\"host\":\"0.0.0.0\",\"port\":8080,\"workers\":4},\"timeout\":30},\"database\":{\"connection\":[{\"connection_max\":5000,\"enabled\":true,\"ports\":[8001,8001,8002],\"server\":\"192.168.1.1\"},{\"connection_max\":300,\"enabled\":false,\"ports\":[8001],\"server\":\"192.168.1.2\"}]},\"dependencies\":{\"clap\":\"4.0\",\"serde\":\"1.0\",\"tokio\":{\"features\":[\"full\"],\"version\":\"1.0\"}},\"dev-dependencies\":{\"assert_cmd\":\"2.0\",\"predicates\":\"3.0\"},\"features\":{\"default\":[\"json\"],\"json\":[\"serde_json\"],\"yaml\":[\"serde_yaml\"]},\"logging\":{\"console\":{\"colors\":true,\"enabled\":true,\"test_booleans\":[true,false,true],\"test_floats\":[3.14,2.71,1.41],\"test_numbers\":[1,2,3,42],\"test_strings\":[\"hello\",\"world\",\"test\"]},\"file\":{\"max_size\":\"10MB\",\"path\":\"/var/log/app.log\",\"rotate\":true},\"format\":\"json\",\"level\":\"info\"},\"metadata\":{\"docs\":{\"rs\":{\"all-features\":true,\"rustdoc-args\":[\"--cfg\",\"docsrs\"]}}},\"mixed_data\":{\"array_value\":[1,2,3],\"boolean_value\":true,\"date_value\":2024,\"float_value\":3.14159,\"integer_value\":42,\"nested\":{\"bin_number\":0,\"empty_array\":[],\"empty_string\":\"\",\"float_with_exponent\":5,\"float_with_underscore\":224,\"heterogeneous_array\":[1,2,\"a\",\"b\",\"c\"],\"hex_number\":0,\"infinity\":9223372036854775807,\"inline_table\":{\"x\":1,\"y\":2},\"int_with_underscore\":1,\"key1\":\"value1\",\"key2\":\"value2\",\"local_date\":1979,\"local_datetime\":1979,\"local_time\":7,\"negative_infinity\":-9223372036854775808,\"nested_array\":[\"gamma\",\"delta\",1,2],\"nested_inline\":{\"person\":{\"age\":30,\"name\":\"John\"}},\"not_a_number\":NaN,\"oct_number\":0,\"offset_datetime\":1979,\"russian_comment\":\"Привет мир\"},\"string_value\":\"test string\"},\"package\":{\"authors\":[\"Test Author <test@example.com>\"],\"description\":\"A test TOML configuration file\",\"edition\":\"2021\",\"license\":\"MIT\",\"name\":\"test-package\",\"version\":\"1.0.0\"},\"products\":[{\"name\":\"Hammer\",\"sku\":738594937},{\"color\":\"gray\",\"name\":\"Nail\",\"sku\":284758393}],\"profile\":{\"release\":{\"codegen-units\":1,\"lto\":true,\"opt-level\":3}},\"quoted_key\":\"value\",\"servers\":[{\"ip\":\"10.0.0.1\",\"name\":\"alpha\",\"role\":\"frontend\"},{\"ip\":\"10.0.0.2\",\"name\":\"beta\",\"role\":\"backend\"}],\"tool\":{\"features\":{\"default\":[\"std\"],\"no-std\":[\"core\"],\"std\":[]},\"name\":\"cargo\",\"settings\":{\"compression\":true,\"format\":\"json\"},\"version\":\"1.70.0\"},\"workspace\":{\"members\":[\"crate1\",\"crate2\",\"subdir/crate3\"]},\"ʎǝʞ\":\"upside down key\"}")
  end

|

run_tests([
  test_case("TOML Parse", test_toml_parse),
  test_case("TOML to JSON", test_toml_to_json)
])
